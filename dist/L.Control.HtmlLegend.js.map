{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/L.Control.HtmlLegend.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","L","Control","HtmlLegend","extend","_map","_activeLayers","_alwaysShow","options","position","legends","collapseSimple","detectStretched","collapsedOnInit","disableVisibilityControls","updateOpacity","defaultOpacity","removeIcon","visibleIcon","hiddenIcon","toggleIcon","onAdd","map","this","_container","DomUtil","_lastId","_entries","DomEvent","disableClickPropagation","disableScrollPropagation","render","empty","forEach","legend","_renderLegend","_checkVisibility","addLegend","Error","removeLegend","itemIdx","entry","layer","events","entries","event","handler","off","hasLayer","remove","container","elements","className","length","label","block","entryIdx","allowRemove","removeButton","on","e","_addElement","html","style","_connectLayer","header","innerHTML","addClass","hasClass","removeClass","elementContainer","element","row","symbol","k","v","_updateOpacity","opacity","setOpacity","setStyle","_layerAdd","display","_layerRemove","classList","add","toggleButton","dataset","visibileOpacity","button","target","opacityController","opacitySlider","type","min","max","step","onchange","newOpacity","layerAdd","layerRemove","control","htmllegend"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,sgBClFrDC,EAAEC,QAAQC,WAAaF,EAAEC,QAAQE,OAAO,CACpCC,KAAM,KACNC,cAAe,EACfC,aAAa,EACbC,QAAS,CACLC,SAAU,WAGVC,QAAS,GAGTC,gBAAgB,EAGhBC,iBAAiB,EAGjBC,iBAAiB,EAEjBC,2BAA2B,EAC3BC,cAAe,KACfC,eAAgB,EAChBC,WAAY,kCACZC,YAAa,+BACbC,WAAY,qCACZC,WAAY,gCAGhBC,MA5BoC,SA4B9BC,GAYF,OAXAC,KAAKlB,KAAOiB,EACZC,KAAKC,WAAavB,EAAEwB,QAAQlC,OAAO,MAAO,mDAC1CgC,KAAKG,QAAU,EACfH,KAAKI,SAAW,GAGhB1B,EAAE2B,SAASC,wBAAwBN,KAAKC,YACxCvB,EAAE2B,SAASE,yBAAyBP,KAAKC,YAEzCD,KAAKQ,SAEER,KAAKC,YAGhBO,OA3CoC,WA2C3B,WACL9B,EAAEwB,QAAQO,MAAMT,KAAKC,YAErBD,KAAKf,QAAQE,QAAQuB,SAAQ,SAAAC,GAAM,OAAI,EAAKC,cAAcD,KAASX,MAEnEA,KAAKa,oBAGTC,UAnDoC,SAmD1BH,GACN,GAAIX,KAAKlB,KAEL,OADAkB,KAAKY,cAAcD,GACZX,KAAKG,QAEhB,MAAMY,MAAM,mDAGhBC,aA3DoC,SA2DvBC,GACT,IAAMC,EAAQlB,KAAKI,SAASa,GACxBC,IACIA,EAAMC,OAASD,EAAME,SACrBhE,OAAOiE,QAAQH,EAAME,QAAQV,SAAQ,yBAAEY,EAAF,KAASC,EAAT,YAAsBL,EAAMC,MAAMK,IAAIF,EAAOC,MAC9EvB,KAAKlB,KAAK2C,SAASP,EAAMC,SACzBnB,KAAKjB,eAAiB,EACtBiB,KAAKa,qBAGbnC,EAAEwB,QAAQwB,OAAO1B,KAAKI,SAASa,GAASU,kBACjC3B,KAAKI,SAASa,KAI7BL,cA1EoC,SA0EtBD,GAAQ,WAClB,GAAKA,EAAOiB,SAAZ,CAIA,IAAMA,EAAWjB,EAAOiB,SAEpBC,EAAY,eAEZ7B,KAAKf,QAAQI,iBAEW,IAApBuC,EAASE,QACa,KAAtBF,EAAS,GAAGG,OACU,KAAtBH,EAAS,GAAGG,OACU,KAAtBH,EAAS,GAAGG,QAEZF,GAAa,qBAIrB,IAAMG,EAAQtD,EAAEwB,QAAQlC,OAAO,MAAO6D,EAAW7B,KAAKC,YAChDgC,IAAajC,KAAKG,QAGxB,GAFAH,KAAKI,SAAS6B,GAAY,CAAEN,UAAWK,GAEnCrB,EAAOuB,YAAa,CACpB,IAAMC,EAAezD,EAAEwB,QAAQlC,OAAO,IAAjB,wBAAuCgC,KAAKf,QAAQS,YAAcsC,GACvFtD,EAAE2B,SAAS+B,GAAGD,EAAc,SAAS,SAACE,GAClC,EAAKrB,aAAaiB,MAI1B,GAAIjC,KAAKf,QAAQG,gBAAsC,IAApBwC,EAASE,SAAiBF,EAAS,GAAGG,MAGrE,OAFA/B,KAAKsC,YAAYV,EAAS,GAAGW,KAAM5B,EAAO1D,KAAM2E,EAAS,GAAGY,MAAOR,GACnEhC,KAAKyC,cAAcT,EAAOrB,EAAQsB,GAC3BD,EAGX,GAAIrB,EAAO1D,KAAM,CACb,IAAMyF,EAAShE,EAAEwB,QAAQlC,OAAO,KAAM,KAAMgE,GAC5CtD,EAAEwB,QAAQlC,OAAO,MAAO,eAAgB0E,GACxChE,EAAEwB,QAAQlC,OAAO,OAAQ,KAAM0E,GAAQC,UAAYhC,EAAO1D,KAEtD+C,KAAKf,QAAQK,iBACbZ,EAAEwB,QAAQ0C,SAASF,EAAQ,UAG/BhE,EAAE2B,SAAS+B,GAAGM,EAAQ,SAAS,WACvBhE,EAAEwB,QAAQ2C,SAASH,EAAQ,UAC3BhE,EAAEwB,QAAQ4C,YAAYJ,EAAQ,UAG9BhE,EAAEwB,QAAQ0C,SAASF,EAAQ,YAEhC1C,MAGP,IAAM+C,EAAmBrE,EAAEwB,QAAQlC,OAAO,MAAO,kBAAmBgE,GAOpE,OALAJ,EAASlB,SAAQ,SAACsC,GACd,EAAKV,YAAYU,EAAQT,KAAMS,EAAQjB,MAAOiB,EAAQR,MAAOO,KAC9D/C,MAEHA,KAAKyC,cAAcT,EAAOrB,EAAQsB,GAC3BD,IAGXM,YA5IoC,SA4IxBC,EAAMR,EAAOS,EAAOb,GAC5B,IAAMsB,EAAMvE,EAAEwB,QAAQlC,OAAO,MAAO,aAAc2D,GAC5CuB,EAASxE,EAAEwB,QAAQlC,OAAO,OAAQ,SAAUiF,GAC9CT,GACApF,OAAOiE,QAAQmB,GAAO9B,SAAQ,YAAY,aAAVyC,EAAU,KAAPC,EAAO,KAAEF,EAAOV,MAAMW,GAAKC,KAElEF,EAAOP,UAAYJ,EACfR,IACArD,EAAEwB,QAAQlC,OAAO,QAAS,KAAMiF,GAAKN,UAAYZ,IAIzDsB,eAxJoC,SAwJrBlC,EAAOmC,GACwB,mBAA/BtD,KAAKf,QAAQO,cACpBQ,KAAKf,QAAQO,cAAc2B,EAAOmC,GACC,mBAArBnC,EAAMoC,WACpBpC,EAAMoC,WAAWD,GACgB,mBAAnBnC,EAAMqC,UACpBrC,EAAMqC,SAAS,CAAEF,aAIzBG,UAlKoC,SAkK1B9B,GACN3B,KAAKjB,eAAiB,EACtB4C,EAAUa,MAAMkB,QAAU,GAC1B1D,KAAKa,oBAGT8C,aAxKoC,SAwKvBhC,GACT3B,KAAKjB,eAAiB,EACtB4C,EAAUa,MAAMkB,QAAU,OAC1B1D,KAAKa,oBAGT4B,cA9KoC,SA8KtBd,EAAWhB,EAAQsB,GAAU,WACjCd,EAAQR,EAAOQ,MAErB,GAAKA,EAAL,CAeA,GAVInB,KAAKlB,KAAK2C,SAASN,GACnBnB,KAAKjB,eAAiB,EAGtB4C,EAAUa,MAAMkB,QAAU,OAG9B/B,EAAUiC,UAAUC,IAAI,kBAGnB7D,KAAKf,QAAQM,0BAA2B,CACzC,IAAM+D,EAAUnC,EAAMmC,SAAWtD,KAAKf,QAAQQ,gBAAkB,EAChEO,KAAKqD,eAAelC,EAAOmC,GAE3B,IAAMQ,EAAepF,EAAEwB,QAAQlC,OAAO,IAAjB,4BAA2CgC,KAAKf,QAAQY,YAAc8B,GAC3FmC,EAAaC,QAAQC,gBAAkBV,EACvC5E,EAAE2B,SAAS+B,GAAG0B,EAAc,SAAS,SAACzB,GAClC,IAAM4B,EAAS5B,EAAE6B,OACbxF,EAAEwB,QAAQ2C,SAASoB,EAAQ,aAC3BvF,EAAEwB,QAAQ4C,YAAYmB,EAAQ,YAC9B,EAAKZ,eAAelC,EAAO8C,EAAOF,QAAQC,mBAG1CtF,EAAEwB,QAAQ0C,SAASqB,EAAQ,YAC3B,EAAKZ,eAAelC,EAAO,OAInC,IAAMgD,EAAoBzF,EAAEwB,QAAQlC,OAAO,OAAQ,iBAAkB2D,GAErEjD,EAAEwB,QAAQlC,OAAO,OAAQ,eAAgBmG,GAAmBxB,UAAY,gBAExEjE,EAAEwB,QAAQlC,OAAO,IAAKgC,KAAKf,QAAQU,YAAawE,GAEhD,IAAMC,EAAgB1F,EAAEwB,QAAQlC,OAAO,QAAS,KAAMmG,GACtDC,EAAcC,KAAO,QACrBD,EAAcE,IAAM,EACpBF,EAAcG,IAAM,EACpBH,EAAcI,KAAO,GACrBJ,EAAcK,SAAY,SAACpC,GACvB,IAAMqC,EAAa,EAAIrC,EAAE6B,OAAOvG,OAAS,EACzC,EAAK0F,eAAelC,EAAOuD,GAC3BZ,EAAaC,QAAQC,gBAAkBU,EACvChG,EAAEwB,QAAQ4C,YAAYgB,EAAc,aAExCM,EAAczG,MAAQ,EAAK2F,EAE3B5E,EAAEwB,QAAQlC,OAAO,IAAKgC,KAAKf,QAAQW,WAAYuE,GAInD,IAAMQ,EAAW3E,KAAKyD,UAAUvF,KAAK8B,KAAM2B,GACrCiD,EAAc5E,KAAK2D,aAAazF,KAAK8B,KAAM2B,GACjDR,EAAMiB,GAAG,MAAOuC,GAAUvC,GAAG,SAAUwC,GACvC5E,KAAKI,SAAS6B,GAAUd,MAAQA,EAChCnB,KAAKI,SAAS6B,GAAUb,OAAS,CAC7ByC,IAAKc,EACLjD,OAAQkD,QA7DR5E,KAAKhB,aAAc,GAiE3B6B,iBAnPoC,WAoP5Bb,KAAKhB,aAAegB,KAAKjB,cACzBiB,KAAKC,WAAWuC,MAAMkB,QAAU,GAGhC1D,KAAKC,WAAWuC,MAAMkB,QAAU,UAK5ChF,EAAEmG,QAAQC,WAAa,SAAA7F,GAAO,OAAI,IAAIP,EAAEC,QAAQC,WAAWK","file":"L.Control.HtmlLegend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","L.Control.HtmlLegend = L.Control.extend({\n    _map: null,\n    _activeLayers: 0,\n    _alwaysShow: false,\n    options: {\n        position: 'topright',\n\n        // array of legend entries - see README for format\n        legends: [],\n\n        // if true, legend entries that are from a simple renderer will use compact presentation\n        collapseSimple: false,\n\n        // if true, will test to see if legend entries look stretched; these are usually in sets of 3 with the middle element having no label\n        detectStretched: false,\n\n        // if true, legends will be collapsed when a new instance is initialized\n        collapsedOnInit: false,\n\n        disableVisibilityControls: false,\n        updateOpacity: null,\n        defaultOpacity: 1,\n        removeIcon: 'leaflet-html-legend-icon-remove',\n        visibleIcon: 'leaflet-html-legend-icon-eye',\n        hiddenIcon: 'leaflet-html-legend-icon-eye-slash',\n        toggleIcon: 'leaflet-html-legend-icon-eye'\n    },\n\n    onAdd(map) {\n        this._map = map;\n        this._container = L.DomUtil.create('div', 'leaflet-control leaflet-bar leaflet-html-legend');\n        this._lastId = 0;\n        this._entries = {};\n\n        // Disable events on container\n        L.DomEvent.disableClickPropagation(this._container);\n        L.DomEvent.disableScrollPropagation(this._container);\n\n        this.render();\n\n        return this._container;\n    },\n\n    render() {\n        L.DomUtil.empty(this._container);\n\n        this.options.legends.forEach(legend => this._renderLegend(legend), this);\n\n        this._checkVisibility();\n    },\n\n    addLegend(legend) {\n        if (this._map) {\n            this._renderLegend(legend);\n            return this._lastId;\n        }\n        throw Error('Legend control must be added to the map first.')\n    },\n\n    removeLegend(itemIdx) {\n        const entry = this._entries[itemIdx]\n        if (entry) {\n            if (entry.layer && entry.events) {\n                Object.entries(entry.events).forEach(([event, handler]) => entry.layer.off(event, handler))\n                if (this._map.hasLayer(entry.layer)) {\n                    this._activeLayers -= 1;\n                    this._checkVisibility();\n                }\n            }\n            L.DomUtil.remove(this._entries[itemIdx].container)\n            delete this._entries[itemIdx]\n        }\n    },\n\n    _renderLegend(legend) {\n        if (!legend.elements) {\n            return;\n        }\n\n        const elements = legend.elements;\n\n        let className = 'legend-block';\n\n        if (this.options.detectStretched) {\n            if (\n                elements.length === 3 &&\n                elements[0].label !== '' &&\n                elements[1].label === '' &&\n                elements[2].label !== ''\n            ) {\n                className += ' legend-stretched';\n            }\n        }\n\n        const block = L.DomUtil.create('div', className, this._container);\n        const entryIdx = ++this._lastId;\n        this._entries[entryIdx] = { container: block }\n\n        if (legend.allowRemove) {\n            const removeButton = L.DomUtil.create('i', `remove-button ${this.options.removeIcon}`, block);\n            L.DomEvent.on(removeButton, 'click', (e) => {\n                this.removeLegend(entryIdx);\n            });\n        }\n\n        if (this.options.collapseSimple && elements.length === 1 && !elements[0].label) {\n            this._addElement(elements[0].html, legend.name, elements[0].style, block);\n            this._connectLayer(block, legend, entryIdx);\n            return block;\n        }\n\n        if (legend.name) {\n            const header = L.DomUtil.create('h4', null, block);\n            L.DomUtil.create('div', 'legend-caret', header);\n            L.DomUtil.create('span', null, header).innerHTML = legend.name;\n\n            if (this.options.collapsedOnInit) {\n                L.DomUtil.addClass(header, 'closed');\n            }\n\n            L.DomEvent.on(header, 'click', () => {\n                if (L.DomUtil.hasClass(header, 'closed')) {\n                    L.DomUtil.removeClass(header, 'closed');\n                }\n                else {\n                    L.DomUtil.addClass(header, 'closed');\n                }\n            }, this);\n        }\n\n        const elementContainer = L.DomUtil.create('div', 'legend-elements', block);\n\n        elements.forEach((element) => {\n            this._addElement(element.html, element.label, element.style, elementContainer);\n        }, this);\n\n        this._connectLayer(block, legend, entryIdx);\n        return block;\n    },\n\n    _addElement(html, label, style, container) {\n        const row = L.DomUtil.create('div', 'legend-row', container);\n        const symbol = L.DomUtil.create('span', 'symbol', row);\n        if (style) {\n            Object.entries(style).forEach(([k, v]) => { symbol.style[k] = v; });\n        }\n        symbol.innerHTML = html;\n        if (label) {\n            L.DomUtil.create('label', null, row).innerHTML = label;\n        }\n    },\n\n    _updateOpacity(layer, opacity) {\n        if (typeof this.options.updateOpacity === 'function') {\n            this.options.updateOpacity(layer, opacity)\n        } else if (typeof layer.setOpacity === 'function') {\n            layer.setOpacity(opacity);\n        } else if (typeof layer.setStyle === 'function') {\n            layer.setStyle({ opacity });\n        }\n    },\n\n    _layerAdd(container) {\n        this._activeLayers += 1;\n        container.style.display = '';\n        this._checkVisibility();\n    },\n\n    _layerRemove(container) {\n        this._activeLayers -= 1;\n        container.style.display = 'none';\n        this._checkVisibility();\n    },\n\n    _connectLayer(container, legend, entryIdx) {\n        const layer = legend.layer;\n\n        if (!layer) {\n            this._alwaysShow = true;\n            return;\n        }\n\n        if (this._map.hasLayer(layer)) {\n            this._activeLayers += 1;\n        }\n        else {\n            container.style.display = 'none';\n        }\n\n        container.classList.add('layer-control');\n\n\n        if (!this.options.disableVisibilityControls) {\n            const opacity = layer.opacity || this.options.defaultOpacity || 1;\n            this._updateOpacity(layer, opacity);\n\n            const toggleButton = L.DomUtil.create('i', `visibility-toggle ${this.options.toggleIcon}`, container);\n            toggleButton.dataset.visibileOpacity = opacity;\n            L.DomEvent.on(toggleButton, 'click', (e) => {\n                const button = e.target;\n                if (L.DomUtil.hasClass(button, 'disabled')) {\n                    L.DomUtil.removeClass(button, 'disabled');\n                    this._updateOpacity(layer, button.dataset.visibileOpacity);\n                }\n                else {\n                    L.DomUtil.addClass(button, 'disabled');\n                    this._updateOpacity(layer, 0);\n                }\n            });\n\n            const opacityController = L.DomUtil.create('span', 'opacity-slider', container);\n\n            L.DomUtil.create('span', 'slider-label', opacityController).innerHTML = 'Transparency:';\n\n            L.DomUtil.create('i', this.options.visibleIcon, opacityController);\n\n            const opacitySlider = L.DomUtil.create('input', null, opacityController);\n            opacitySlider.type = 'range';\n            opacitySlider.min = 0;\n            opacitySlider.max = 1;\n            opacitySlider.step = 0.1;\n            opacitySlider.onchange = ((e) => {\n                const newOpacity = 1 - e.target.value || 0;\n                this._updateOpacity(layer, newOpacity);\n                toggleButton.dataset.visibileOpacity = newOpacity;\n                L.DomUtil.removeClass(toggleButton, 'disabled');\n            });\n            opacitySlider.value = 1 - (opacity);\n\n            L.DomUtil.create('i', this.options.hiddenIcon, opacityController);\n        };\n\n\n        const layerAdd = this._layerAdd.bind(this, container)\n        const layerRemove = this._layerRemove.bind(this, container)\n        layer.on('add', layerAdd).on('remove', layerRemove)\n        this._entries[entryIdx].layer = layer\n        this._entries[entryIdx].events = {\n            add: layerAdd,\n            remove: layerRemove\n        }\n    },\n\n    _checkVisibility() {\n        if (this._alwaysShow || this._activeLayers) {\n            this._container.style.display = '';\n        }\n        else {\n            this._container.style.display = 'none';\n        }\n    }\n});\n\nL.control.htmllegend = options => new L.Control.HtmlLegend(options);\n"],"sourceRoot":""}